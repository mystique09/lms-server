// Code generated by MockGen. DO NOT EDIT.
// Source: server/domain (interfaces: SignupUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	postgresql "server/database/postgresql"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockSignupUsecase is a mock of SignupUsecase interface.
type MockSignupUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockSignupUsecaseMockRecorder
}

// MockSignupUsecaseMockRecorder is the mock recorder for MockSignupUsecase.
type MockSignupUsecaseMockRecorder struct {
	mock *MockSignupUsecase
}

// NewMockSignupUsecase creates a new mock instance.
func NewMockSignupUsecase(ctrl *gomock.Controller) *MockSignupUsecase {
	mock := &MockSignupUsecase{ctrl: ctrl}
	mock.recorder = &MockSignupUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSignupUsecase) EXPECT() *MockSignupUsecaseMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockSignupUsecase) CreateUser(arg0 echo.Context, arg1, arg2, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockSignupUsecaseMockRecorder) CreateUser(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockSignupUsecase)(nil).CreateUser), arg0, arg1, arg2, arg3)
}

// GetUserByUsername mocks base method.
func (m *MockSignupUsecase) GetUserByUsername(arg0 echo.Context, arg1 string) (postgresql.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserByUsername", arg0, arg1)
	ret0, _ := ret[0].(postgresql.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserByUsername indicates an expected call of GetUserByUsername.
func (mr *MockSignupUsecaseMockRecorder) GetUserByUsername(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserByUsername", reflect.TypeOf((*MockSignupUsecase)(nil).GetUserByUsername), arg0, arg1)
}
