// Code generated by MockGen. DO NOT EDIT.
// Source: server/domain (interfaces: CreateClassroomUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	postgresql "server/database/postgresql"

	gomock "github.com/golang/mock/gomock"
)

// MockCreateClassroomUsecase is a mock of CreateClassroomUsecase interface.
type MockCreateClassroomUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockCreateClassroomUsecaseMockRecorder
}

// MockCreateClassroomUsecaseMockRecorder is the mock recorder for MockCreateClassroomUsecase.
type MockCreateClassroomUsecaseMockRecorder struct {
	mock *MockCreateClassroomUsecase
}

// NewMockCreateClassroomUsecase creates a new mock instance.
func NewMockCreateClassroomUsecase(ctrl *gomock.Controller) *MockCreateClassroomUsecase {
	mock := &MockCreateClassroomUsecase{ctrl: ctrl}
	mock.recorder = &MockCreateClassroomUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateClassroomUsecase) EXPECT() *MockCreateClassroomUsecaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockCreateClassroomUsecase) Create(arg0 context.Context, arg1 *postgresql.CreateClassParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockCreateClassroomUsecaseMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCreateClassroomUsecase)(nil).Create), arg0, arg1)
}
