// Code generated by MockGen. DO NOT EDIT.
// Source: server/domain (interfaces: AccessTokenUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	tokenutil "server/internal/tokenutil"

	gomock "github.com/golang/mock/gomock"
)

// MockAccessTokenUsecase is a mock of AccessTokenUsecase interface.
type MockAccessTokenUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockAccessTokenUsecaseMockRecorder
}

// MockAccessTokenUsecaseMockRecorder is the mock recorder for MockAccessTokenUsecase.
type MockAccessTokenUsecaseMockRecorder struct {
	mock *MockAccessTokenUsecase
}

// NewMockAccessTokenUsecase creates a new mock instance.
func NewMockAccessTokenUsecase(ctrl *gomock.Controller) *MockAccessTokenUsecase {
	mock := &MockAccessTokenUsecase{ctrl: ctrl}
	mock.recorder = &MockAccessTokenUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccessTokenUsecase) EXPECT() *MockAccessTokenUsecaseMockRecorder {
	return m.recorder
}

// ValidateAccessToken mocks base method.
func (m *MockAccessTokenUsecase) ValidateAccessToken(arg0 string) (*tokenutil.Payload, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateAccessToken", arg0)
	ret0, _ := ret[0].(*tokenutil.Payload)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateAccessToken indicates an expected call of ValidateAccessToken.
func (mr *MockAccessTokenUsecaseMockRecorder) ValidateAccessToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateAccessToken", reflect.TypeOf((*MockAccessTokenUsecase)(nil).ValidateAccessToken), arg0)
}
