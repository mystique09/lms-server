// Code generated by MockGen. DO NOT EDIT.
// Source: server/domain (interfaces: ProfileUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	postgresql "server/database/postgresql"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockProfileUsecase is a mock of ProfileUsecase interface.
type MockProfileUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockProfileUsecaseMockRecorder
}

// MockProfileUsecaseMockRecorder is the mock recorder for MockProfileUsecase.
type MockProfileUsecaseMockRecorder struct {
	mock *MockProfileUsecase
}

// NewMockProfileUsecase creates a new mock instance.
func NewMockProfileUsecase(ctrl *gomock.Controller) *MockProfileUsecase {
	mock := &MockProfileUsecase{ctrl: ctrl}
	mock.recorder = &MockProfileUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileUsecase) EXPECT() *MockProfileUsecaseMockRecorder {
	return m.recorder
}

// GetClassrooms mocks base method.
func (m *MockProfileUsecase) GetClassrooms(arg0 context.Context, arg1 uuid.UUID) ([]postgresql.Classroom, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClassrooms", arg0, arg1)
	ret0, _ := ret[0].([]postgresql.Classroom)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClassrooms indicates an expected call of GetClassrooms.
func (mr *MockProfileUsecaseMockRecorder) GetClassrooms(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClassrooms", reflect.TypeOf((*MockProfileUsecase)(nil).GetClassrooms), arg0, arg1)
}

// GetProfile mocks base method.
func (m *MockProfileUsecase) GetProfile(arg0 context.Context, arg1 uuid.UUID) (postgresql.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfile", arg0, arg1)
	ret0, _ := ret[0].(postgresql.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfile indicates an expected call of GetProfile.
func (mr *MockProfileUsecaseMockRecorder) GetProfile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfile", reflect.TypeOf((*MockProfileUsecase)(nil).GetProfile), arg0, arg1)
}
