// Code generated by MockGen. DO NOT EDIT.
// Source: server/domain (interfaces: DeleteClassroomUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	postgresql "server/database/postgresql"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockDeleteClassroomUsecase is a mock of DeleteClassroomUsecase interface.
type MockDeleteClassroomUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteClassroomUsecaseMockRecorder
}

// MockDeleteClassroomUsecaseMockRecorder is the mock recorder for MockDeleteClassroomUsecase.
type MockDeleteClassroomUsecaseMockRecorder struct {
	mock *MockDeleteClassroomUsecase
}

// NewMockDeleteClassroomUsecase creates a new mock instance.
func NewMockDeleteClassroomUsecase(ctrl *gomock.Controller) *MockDeleteClassroomUsecase {
	mock := &MockDeleteClassroomUsecase{ctrl: ctrl}
	mock.recorder = &MockDeleteClassroomUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleteClassroomUsecase) EXPECT() *MockDeleteClassroomUsecaseMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockDeleteClassroomUsecase) Delete(arg0 context.Context, arg1 uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockDeleteClassroomUsecaseMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockDeleteClassroomUsecase)(nil).Delete), arg0, arg1)
}

// GetByID mocks base method.
func (m *MockDeleteClassroomUsecase) GetByID(arg0 context.Context, arg1 uuid.UUID) (postgresql.Classroom, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0, arg1)
	ret0, _ := ret[0].(postgresql.Classroom)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockDeleteClassroomUsecaseMockRecorder) GetByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockDeleteClassroomUsecase)(nil).GetByID), arg0, arg1)
}
